import telebot
import subprocess
import time
import pyperclip

TOKEN = ''

bot = telebot.TeleBot(TOKEN)

ADMIN_ID =
def notify_admin(message, prefix="üì©"):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É (—Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)"""
    if message.from_user.id != ADMIN_ID:
        try:
            bot.send_message(
                ADMIN_ID,
                f"{prefix} –û—Ç @{message.from_user.username or '–±–µ–∑ username'} (ID: {message.from_user.id}):\n\n{message.text}"
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–¥–º–∏–Ω—É: {e}")

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id,"–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –±–æ—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å–≤—Ç–∏—è —Å VPn")
    notify_admin(message, "üü¢ –ö–æ–º–∞–Ω–¥–∞ /start")

@bot.message_handler(commands=['info'])
def info_message(message):
    bot.send_message(message.chat.id, '–≠—Ç–æ –∫—Ä—É—Ç–æ–π –≤–ø–Ω')
    notify_admin(message, "üü¢ –ö–æ–º–∞–Ω–¥–∞ /info")

@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ —Å—Ç–∞—Ä—Ç /start')
    notify_admin(message, "üü¢ –ö–æ–º–∞–Ω–¥–∞ /help")

@bot.message_handler(commands=['send'])
def send_message(message):
    bot.send_message(message.chat.id, '–≤—Å—è–∑—Ç—è—Ç—å—Å—è —Å ukfdysv - ')
    notify_admin(message, "üü¢ –ö–æ–º–∞–Ω–¥–∞ /send")

ADMIN_ID =
COOLDOWN_SECONDS = 1  # –≤—Ä–µ–º—è –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_last_command_time = {}  # —Å–ª–æ–≤–∞—Ä—å: user_id -> –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–∑–æ–≤–∞
FILE_PATH = 'saved_text.txt'  # —Ñ–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ –±—É—Ñ–µ—Ä–∞
@bot.message_handler(commands=['path'])
def path_message(message):
    user_id = message.from_user.id
    chat_id = message.chat.id

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø
    if user_id != ADMIN_ID:
        bot.send_message(chat_id, "‚õî –ö–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")
        return

    # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–∑–æ–≤–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0)
    last_time = user_last_command_time.get(user_id, 0)
    current_time = time.time()

    if current_time - last_time < COOLDOWN_SECONDS:
        remaining = int(COOLDOWN_SECONDS - (current_time - last_time))
        bot.send_message(chat_id, f"‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ {remaining} —Å–µ–∫. –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—É—Å–∫–æ–º.")
        return

    try:
        subprocess.Popen(["python", "start-amnezia.py"])
        bot.send_message(chat_id, "‚úÖ AmneziaVPN –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        user_last_command_time[user_id] = current_time  # –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        # –ñ–¥—ë–º, —á—Ç–æ–±—ã –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ –æ–±–Ω–æ–≤–∏–ª—Å—è –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å"
        time.sleep(22)

        clipboard_text = pyperclip.paste()
        if clipboard_text:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –≤ —Ñ–∞–π–ª
            with open(FILE_PATH, 'w', encoding='utf-8') as f:
                f.write(clipboard_text)

        # –ß—Ç–µ–Ω–∏–µ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
        clipboard_text = pyperclip.paste()
        if clipboard_text:
            bot.send_message(chat_id, f"üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞:\n{clipboard_text}")
        else:
            bot.send_message(chat_id, "‚ùå –ë—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ –ø—É—Å—Ç.")

    except Exception as e:
        bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

# –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /find
@bot.message_handler(commands=['find'])
def find_command(message):
    chat_id = message.chat.id
    try:
        with open(FILE_PATH, 'rb') as f:
            bot.send_document(chat_id, f)
    except FileNotFoundError:
        bot.send_message(chat_id, "–§–∞–π–ª —Å —Ç–µ–∫—Å—Ç–æ–º –ø–æ–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω. –í—ã–∑–æ–≤–∏—Ç–µ /path –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è.")

# üÜï –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –ø—Ä–æ—á–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ‚Äî –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –∏—Ö –∞–¥–º–∏–Ω—É
@bot.message_handler(func=lambda message: True)
def forward_to_admin(message):
    if message.from_user.id != ADMIN_ID:
        try:
            bot.send_message(
                ADMIN_ID,
                f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username or '–±–µ–∑ username'} "
                f"(ID: {message.from_user.id}):\n\n{message.text}"
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {e}")

bot.infinity_polling()